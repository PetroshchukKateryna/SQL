Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000 
vii. hours table = 10000
viii. photo table = 10000 
ix. review table = 10000 
x. tip table = 10000 
xi. user table = 10000

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = id: 10000, business_id: 8090, user_id: 9581
vi. Checkin = business_id: 493
vii. Photo = id: 10000, photo: 6493
viii. Tip = user_id: 537, business_id: 3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
SELECT COUNT (id) 
FROM user

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
		min: 1 max: 5 avg: 3.7082
	i. Table: Business, Column: Stars
		min: 1.0 max: 5.0 avg: 3.6549
	iii. Table: Tip, Column: Likes
		min: 0 max: 2 avg: 0.0144
	iv. Table: Checkin, Column: Count
		min: 1 max: 53 avg: 1.9414
	v. Table: User, Column: Review_count
		min: 0 max: 2000 avg: 24.2995
SQL CODE:
SELECT MIN(Column),MAX(Column),AVG(Column)
FROM table

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
SELECT city, SUM(review_count)
FROM business
GROUP BY city
ORDER BY 2 DESC
	
	
	Copy and Paste the Result Below:
+-----------------+-------------------+
| city            | SUM(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT stars, COUNT(stars)
FROM business
WHERE city = 'Avon'
GROUP BY 1

Copy and Paste the Resulting Table Below (2 columns вЂ“ star rating and count):

+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:
SELECT stars, COUNT(stars)
FROM business
WHERE city = 'Beachwood'
GROUP BY 1


Copy and Paste the Resulting Table Below (2 columns вЂ“ star rating and count):
+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
SELECT name, review_count
FROM user
ORDER BY 2 DESC
LIMIT 3
	
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans? - NO

	Please explain your findings and interpretation of the results:
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
+-----------+--------------+------+

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
+------+------+
| love | hate |
+------+------+
| 1780 |  232 |
+------+------+

	
	SQL code used to arrive at answer:
SELECT (select count(text)
from review
WHERE text LIKE '%love%') AS love,
(select count(text)
from review
WHERE text LIKE '%hate%') AS hate

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT name, fans
FROM user
ORDER BY 2 DESC
LIMIT 10
	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours? - YES


ii. Do the two groups you chose to analyze have a different number of reviews? - YES
+-------+--------------+--------------+----------+-----------------------+
| stars | name         | review_count | category | hours                 |
+-------+--------------+--------------+----------+-----------------------+
|   2.5 | Loblaws      |           10 | Food     | Monday|8:00-22:00     |
|   2.5 | Loblaws      |           10 | Food     | Tuesday|8:00-22:00    |
|   2.5 | Loblaws      |           10 | Food     | Friday|8:00-22:00     |
|   2.5 | Loblaws      |           10 | Food     | Wednesday|8:00-22:00  |
|   2.5 | Loblaws      |           10 | Food     | Thursday|8:00-22:00   |
|   2.5 | Loblaws      |           10 | Food     | Sunday|8:00-22:00     |
|   2.5 | Loblaws      |           10 | Food     | Saturday|8:00-22:00   |
|   4.0 | Halo Brewery |           15 | Food     | Tuesday|15:00-21:00   |
|   4.0 | Halo Brewery |           15 | Food     | Friday|15:00-21:00    |
|   4.0 | Halo Brewery |           15 | Food     | Wednesday|15:00-21:00 |
|   4.0 | Halo Brewery |           15 | Food     | Thursday|15:00-21:00  |
|   4.0 | Halo Brewery |           15 | Food     | Sunday|11:00-21:00    |
|   4.0 | Halo Brewery |           15 | Food     | Saturday|11:00-21:00  |
|   4.5 | Cabin Fever  |           26 | Food     | Monday|16:00-2:00     |
|   4.5 | Cabin Fever  |           26 | Food     | Tuesday|18:00-2:00    |
|   4.5 | Cabin Fever  |           26 | Food     | Friday|18:00-2:00     |
|   4.5 | Cabin Fever  |           26 | Food     | Wednesday|18:00-2:00  |
|   4.5 | Cabin Fever  |           26 | Food     | Thursday|18:00-2:00   |
|   4.5 | Cabin Fever  |           26 | Food     | Sunday|16:00-2:00     |
|   4.5 | Cabin Fever  |           26 | Food     | Saturday|16:00-2:00   |
+-------+--------------+--------------+----------+-----------------------+
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain. No. They have different locations

SQL code used for analysis:
SELECT stars, name, review_count, category, hours
FROM business b JOIN category c JOIN hours h
ON b.id = c.business_id AND b.id = h.business_id
WHERE city = 'Toronto' AND category = 'Food'
ORDER BY stars

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The ones that are still open have more reviews on
average than ones that are closed
         
ii. Difference 2:
         The ones that are still open have hgher stars on
average than ones that are closed
         
         
SQL code used for analysis:
SELECT COUNT(is_open), SUM(review_count), AVG(stars)
FROM business 
WHERE is_open = '1'
SELECT COUNT(is_open), SUM(review_count), AVG(stars)
FROM business 
WHERE is_open = '0'

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Find out the most  and less popular category for opening own business
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
I need category, number of is_open now, avg review_count.
                           
                  
iii. Output of your finished dataset:
+---------------------------+--------+-----------------------------+
| category                  | Number | ROUND(AVG(review_count), 0) |
+---------------------------+--------+-----------------------------+
| Beauty & Spas             |      3 |                         6.0 |
| Eyelash Service           |      3 |                         6.0 |
| Makeup Artists            |      3 |                         6.0 |
| Permanent Makeup          |      3 |                         6.0 |
| Tattoo                    |      3 |                         6.0 |
| French                    |      5 |                        89.0 |
| Martial Arts              |      5 |                         3.0 |
| Spanish                   |      5 |                        89.0 |
| Beer                      |      6 |                        15.0 |
| Breweries                 |      6 |                        15.0 |
| Event Planning & Services |      6 |                        10.0 |
| Fashion                   |      6 |                         6.0 |
| Lounges                   |      6 |                        10.0 |
| Pool Halls                |      6 |                        10.0 |
| Venues & Event Spaces     |      6 |                        10.0 |
| Wine & Spirits            |      6 |                        15.0 |
| Women's Clothing          |      6 |                         6.0 |
| Acupuncture               |      7 |                        16.0 |
| Arcades                   |      7 |                        26.0 |
| Art Galleries             |      7 |                        26.0 |
| Arts & Entertainment      |      7 |                        26.0 |
| Books                     |      7 |                        26.0 |
| Burgers                   |      7 |                        47.0 |
| Cafes                     |      7 |                        26.0 |
| Coffee & Tea              |      7 |                        26.0 |
+---------------------------+--------+-----------------------------         
         
iv. Provide the SQL code you used to create your final dataset:
SELECT c.category, COUNT(b.name) AS
Number, ROUND(AVG(review_count), 0)
FROM (business b INNER JOIN hours h ON b.id = h.business_id)
INNER JOIN category c ON c.business_id = b.id
WHERE city = 'Toronto' and is_open = '1'
GROUP BY c.category
ORDER BY 2 ASC
